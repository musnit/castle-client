default_platform(:ios)

def make_bundle_version
  bundle_version = Actions.lane_context[SharedValues::VERSION_NUMBER] + ".1" + number_of_commits.to_s
  return bundle_version
end

def set_bundle_version_from_commit_count
  bundle_version = make_bundle_version
  puts "Setting build number to '" + bundle_version + "'..."
  set_info_plist_value(
    path: "./ios/Castle/Info.plist",
    key: "CFBundleVersion",
    value: bundle_version
  )

  set_info_plist_value(
    path: "./ios/CastleNotificationService/Info.plist",
    key: "CFBundleVersion",
    value: bundle_version
  )
end

def set_app_version_on_server
  bundle_version = make_bundle_version
  puts "Setting server app version to '" + bundle_version + "'..."
  sh(
    "../tools/set-app-version.sh",
    "ios",
    bundle_version
  )
end

platform :ios do
  before_all do
    setup_circle_ci
    Actions.lane_context[SharedValues::VERSION_NUMBER] = get_version_number(
      xcodeproj: "./ios/Castle.xcodeproj",
      target: "Castle"
    )
    set_bundle_version_from_commit_count
  end

  before_each do
    get_certificates(
        username: "ben@castle.xyz"
    )
    get_provisioning_profile(
        username: "ben@castle.xyz"
    )
    build_app(
      scheme: "Castle",
      workspace: "ios/Castle.xcworkspace",
      export_options: {
     	provisioningProfiles: { 
          "xyz.castle.castle" => "xyz.castle.castle AppStore 1598649932",
          "xyz.castle.castle.CastleNotificationService" => "xyz.castle.castle.CastleNotificationService AppSto",
        },
        # https://developer.apple.com/forums/thread/690647
        manageAppVersionAndBuildNumber: false,
      }
    )
  end
  
  lane :beta do
    upload_to_testflight(
        username: "ben@castle.xyz"
    )
    # set_app_version_on_server
  end
end
